{"ast":null,"code":"import axios from 'axios';\nimport { ALL, CREATED, EXISTENT } from '../../const/sort';\nexport const FETCH_DOGS = 'FETCH_DOGS';\nexport const SEARCH_DOGS = 'SEARCH_DOGS';\nexport const SORT_NAME = 'SORT_NAME';\nexport const ADD_DOG = 'ADD_DOG';\nexport const SORT_WEIGHT = 'SORT_WEIGHT';\nexport const FETCH_TEMPERAMENTS = 'FETCH_TEMPERAMENTS';\nexport function fetchDogs() {\n  let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ALL;\n  return function (dispatch) {\n    axios.get(\"http://localhost:3001/api/dogs\").then(dogs => {\n      let filteredDogs = dogs.data;\n      const regexExp = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/gi;\n\n      if (type === CREATED) {\n        filteredDogs = dogs.data.filter(element => {\n          return regexExp.test(element.id);\n        });\n      } else if (type === EXISTENT) {\n        filteredDogs = dogs.data.filter(element => {\n          return !regexExp.test(element.id);\n        });\n      }\n\n      dispatch({\n        type: FETCH_DOGS,\n        payload: filteredDogs\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}\nexport function SearchDog(search) {\n  return function (dispatch) {\n    axios.get(\"http://localhost:3001/api/dogs?name=\" + search).then(dogs => {\n      dispatch({\n        type: SEARCH_DOGS,\n        payload: dogs\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}\n_c = SearchDog;\nexport function SortName(order) {\n  return {\n    type: SORT_NAME,\n    payload: order\n  };\n}\n_c2 = SortName;\nexport function SortWeight(order) {\n  return {\n    type: SORT_WEIGHT,\n    payload: order\n  };\n}\n_c3 = SortWeight;\nexport function FetchTemperaments() {\n  return function (dispatch) {\n    axios.get('http://localhost:3001/api/temperaments').then(temperaments);\n    dispatch({\n      type: FETCH_TEMPERAMENTS,\n      payload: temperaments\n    });\n  };\n}\n_c4 = FetchTemperaments;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SearchDog\");\n$RefreshReg$(_c2, \"SortName\");\n$RefreshReg$(_c3, \"SortWeight\");\n$RefreshReg$(_c4, \"FetchTemperaments\");","map":{"version":3,"sources":["C:/Users/Salvador/Desktop/-/C/PI.DOGS/client/src/store/actions/index.js"],"names":["axios","ALL","CREATED","EXISTENT","FETCH_DOGS","SEARCH_DOGS","SORT_NAME","ADD_DOG","SORT_WEIGHT","FETCH_TEMPERAMENTS","fetchDogs","type","dispatch","get","then","dogs","filteredDogs","data","regexExp","filter","element","test","id","payload","catch","error","console","log","SearchDog","search","SortName","order","SortWeight","FetchTemperaments","temperaments"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,QAAvB,QAAuC,kBAAvC;AAGA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,SAASC,SAAT,GAA6B;AAAA,MAAVC,IAAU,uEAALV,GAAK;AAChC,SAAO,UAASW,QAAT,EAAmB;AACtBZ,IAAAA,KAAK,CAACa,GAAN,CAAU,gCAAV,EACCC,IADD,CACOC,IAAD,IAAU;AACZ,UAAIC,YAAY,GAAGD,IAAI,CAACE,IAAxB;AACA,YAAMC,QAAQ,GAAG,yFAAjB;;AACA,UAAIP,IAAI,KAAGT,OAAX,EAAmB;AACfc,QAAAA,YAAY,GAACD,IAAI,CAACE,IAAL,CAAUE,MAAV,CAAkBC,OAAD,IAAY;AACtC,iBAAOF,QAAQ,CAACG,IAAT,CAAcD,OAAO,CAACE,EAAtB,CAAP;AACH,SAFY,CAAb;AAGH,OAJD,MAIO,IAAIX,IAAI,KAAGR,QAAX,EAAoB;AACvBa,QAAAA,YAAY,GAACD,IAAI,CAACE,IAAL,CAAUE,MAAV,CAAkBC,OAAD,IAAY;AACtC,iBAAO,CAAEF,QAAQ,CAACG,IAAT,CAAcD,OAAO,CAACE,EAAtB,CAAT;AACH,SAFY,CAAb;AAGH;;AACDV,MAAAA,QAAQ,CAAC;AACLD,QAAAA,IAAI,EAAEP,UADD;AAELmB,QAAAA,OAAO,EAAEP;AAFJ,OAAD,CAAR;AAIH,KAjBD,EAkBCQ,KAlBD,CAkBQC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KApBD;AAqBH,GAtBD;AAuBH;AAED,OAAO,SAASG,SAAT,CAAmBC,MAAnB,EAA0B;AAC7B,SAAO,UAASjB,QAAT,EAAmB;AACtBZ,IAAAA,KAAK,CAACa,GAAN,CAAU,yCAAuCgB,MAAjD,EACCf,IADD,CACOC,IAAD,IAAU;AACZH,MAAAA,QAAQ,CAAC;AACLD,QAAAA,IAAI,EAAEN,WADD;AAELkB,QAAAA,OAAO,EAAER;AAFJ,OAAD,CAAR;AAIH,KAND,EAOCS,KAPD,CAOQC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KATD;AAUH,GAXD;AAYH;KAbeG,S;AAehB,OAAO,SAASE,QAAT,CAAkBC,KAAlB,EAAwB;AAC3B,SAAO;AACHpB,IAAAA,IAAI,EAAEL,SADH;AAEHiB,IAAAA,OAAO,EAAEQ;AAFN,GAAP;AAIH;MALeD,Q;AAOhB,OAAO,SAASE,UAAT,CAAoBD,KAApB,EAA0B;AAC7B,SAAO;AACHpB,IAAAA,IAAI,EAAEH,WADH;AAEHe,IAAAA,OAAO,EAAEQ;AAFN,GAAP;AAIH;MALeC,U;AAOhB,OAAO,SAASC,iBAAT,GAA4B;AAC/B,SAAO,UAAUrB,QAAV,EAAmB;AACtBZ,IAAAA,KAAK,CAACa,GAAN,CAAU,wCAAV,EACCC,IADD,CACOoB,YADP;AAEAtB,IAAAA,QAAQ,CAAC;AACLD,MAAAA,IAAI,EAAEF,kBADD;AAELc,MAAAA,OAAO,EAAEW;AAFJ,KAAD,CAAR;AAIH,GAPD;AAQH;MATeD,iB","sourcesContent":["import axios from 'axios';\r\nimport { ALL, CREATED, EXISTENT } from '../../const/sort';\r\n\r\n\r\nexport const FETCH_DOGS = 'FETCH_DOGS';\r\nexport const SEARCH_DOGS = 'SEARCH_DOGS';\r\nexport const SORT_NAME = 'SORT_NAME';\r\nexport const ADD_DOG = 'ADD_DOG';\r\nexport const SORT_WEIGHT = 'SORT_WEIGHT';\r\nexport const FETCH_TEMPERAMENTS = 'FETCH_TEMPERAMENTS';\r\n\r\nexport function fetchDogs(type=ALL) {\r\n    return function(dispatch) {\r\n        axios.get(\"http://localhost:3001/api/dogs\")\r\n        .then((dogs) => {\r\n            let filteredDogs = dogs.data\r\n            const regexExp = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/gi;\r\n            if (type===CREATED){\r\n                filteredDogs=dogs.data.filter((element) =>{\r\n                    return regexExp.test(element.id)\r\n                })\r\n            } else if (type===EXISTENT){\r\n                filteredDogs=dogs.data.filter((element) =>{\r\n                    return !(regexExp.test(element.id))\r\n                })\r\n            }\r\n            dispatch({\r\n                type: FETCH_DOGS,\r\n                payload: filteredDogs\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function SearchDog(search){\r\n    return function(dispatch) {\r\n        axios.get(\"http://localhost:3001/api/dogs?name=\"+search)\r\n        .then((dogs) => {\r\n            dispatch({\r\n                type: SEARCH_DOGS,\r\n                payload: dogs\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function SortName(order){\r\n    return {\r\n        type: SORT_NAME,\r\n        payload: order\r\n    }\r\n}\r\n\r\nexport function SortWeight(order){\r\n    return {\r\n        type: SORT_WEIGHT,\r\n        payload: order\r\n    }\r\n}\r\n\r\nexport function FetchTemperaments(){\r\n    return function (dispatch){\r\n        axios.get('http://localhost:3001/api/temperaments')\r\n        .then((temperaments))\r\n        dispatch({\r\n            type: FETCH_TEMPERAMENTS,\r\n            payload: temperaments\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}