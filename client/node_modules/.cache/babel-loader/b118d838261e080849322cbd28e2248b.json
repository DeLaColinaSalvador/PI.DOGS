{"ast":null,"code":"import axios from 'axios';\nimport { ALL, EXISTENT } from '../../const/sort';\nexport const FETCH_DOGS = 'FETCH_DOGS';\nexport const SEARCH_DOGS = 'SEARCH_DOGS';\nexport const SORT_NAME = 'SORT_NAME';\nexport const ADD_DOG = 'ADD_DOG';\nexport const SORT_WEIGHT = 'SORT_WEIGHT';\nexport function fetchDogs() {\n  let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ALL;\n  return function (dispatch) {\n    axios.get(\"http://localhost:3001/api/dogs\").then(dogs => {\n      console.log(dogs);\n      let filteredDogs;\n\n      if (type === EXISTENT) {\n        filteredDogs = dogs.data.filter(element => {});\n      }\n\n      dispatch({\n        type: FETCH_DOGS,\n        payload: dogs.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}\nexport function SearchDog(search) {\n  return function (dispatch) {\n    axios.get(\"http://localhost:3001/api/dogs?name=\" + search).then(dogs => {\n      dispatch({\n        type: SEARCH_DOGS,\n        payload: dogs\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}\n_c = SearchDog;\nexport function SortName(order) {\n  return {\n    type: SORT_NAME,\n    payload: order\n  };\n}\n_c2 = SortName;\nexport function SortWeight(order) {\n  return {\n    type: SORT_WEIGHT,\n    payload: order\n  };\n}\n_c3 = SortWeight;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SearchDog\");\n$RefreshReg$(_c2, \"SortName\");\n$RefreshReg$(_c3, \"SortWeight\");","map":{"version":3,"sources":["C:/Users/Salvador/Desktop/-/C/PI.DOGS/client/src/store/actions/index.js"],"names":["axios","ALL","EXISTENT","FETCH_DOGS","SEARCH_DOGS","SORT_NAME","ADD_DOG","SORT_WEIGHT","fetchDogs","type","dispatch","get","then","dogs","console","log","filteredDogs","data","filter","element","payload","catch","error","SearchDog","search","SortName","order","SortWeight"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,kBAA9B;AAGA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,SAASC,SAAT,GAA6B;AAAA,MAAVC,IAAU,uEAALR,GAAK;AAChC,SAAO,UAASS,QAAT,EAAmB;AACtBV,IAAAA,KAAK,CAACW,GAAN,CAAU,gCAAV,EACCC,IADD,CACOC,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAIG,YAAJ;;AACA,UAAIP,IAAI,KAAGP,QAAX,EAAoB;AAChBc,QAAAA,YAAY,GAACH,IAAI,CAACI,IAAL,CAAUC,MAAV,CAAkBC,OAAD,IAAY,CAEzC,CAFY,CAAb;AAGH;;AACDT,MAAAA,QAAQ,CAAC;AACLD,QAAAA,IAAI,EAAEN,UADD;AAELiB,QAAAA,OAAO,EAAEP,IAAI,CAACI;AAFT,OAAD,CAAR;AAIH,KAbD,EAcCI,KAdD,CAcQC,KAAD,IAAW;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,KAhBD;AAiBH,GAlBD;AAmBH;AAED,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA0B;AAC7B,SAAO,UAASd,QAAT,EAAmB;AACtBV,IAAAA,KAAK,CAACW,GAAN,CAAU,yCAAuCa,MAAjD,EACCZ,IADD,CACOC,IAAD,IAAU;AACZH,MAAAA,QAAQ,CAAC;AACLD,QAAAA,IAAI,EAAEL,WADD;AAELgB,QAAAA,OAAO,EAAEP;AAFJ,OAAD,CAAR;AAIH,KAND,EAOCQ,KAPD,CAOQC,KAAD,IAAW;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,KATD;AAUH,GAXD;AAYH;KAbeC,S;AAehB,OAAO,SAASE,QAAT,CAAkBC,KAAlB,EAAwB;AAC3B,SAAO;AACHjB,IAAAA,IAAI,EAAEJ,SADH;AAEHe,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH;MALeD,Q;AAOhB,OAAO,SAASE,UAAT,CAAoBD,KAApB,EAA0B;AAC7B,SAAO;AACHjB,IAAAA,IAAI,EAAEF,WADH;AAEHa,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH;MALeC,U","sourcesContent":["import axios from 'axios';\r\nimport { ALL, EXISTENT } from '../../const/sort';\r\n\r\n\r\nexport const FETCH_DOGS = 'FETCH_DOGS';\r\nexport const SEARCH_DOGS = 'SEARCH_DOGS';\r\nexport const SORT_NAME = 'SORT_NAME';\r\nexport const ADD_DOG = 'ADD_DOG';\r\nexport const SORT_WEIGHT = 'SORT_WEIGHT'\r\n\r\nexport function fetchDogs(type=ALL) {\r\n    return function(dispatch) {\r\n        axios.get(\"http://localhost:3001/api/dogs\")\r\n        .then((dogs) => {\r\n            console.log(dogs)\r\n            let filteredDogs\r\n            if (type===EXISTENT){\r\n                filteredDogs=dogs.data.filter((element) =>{\r\n                    \r\n                })\r\n            }\r\n            dispatch({\r\n                type: FETCH_DOGS,\r\n                payload: dogs.data\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function SearchDog(search){\r\n    return function(dispatch) {\r\n        axios.get(\"http://localhost:3001/api/dogs?name=\"+search)\r\n        .then((dogs) => {\r\n            dispatch({\r\n                type: SEARCH_DOGS,\r\n                payload: dogs\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function SortName(order){\r\n    return {\r\n        type: SORT_NAME,\r\n        payload: order\r\n    }\r\n}\r\n\r\nexport function SortWeight(order){\r\n    return {\r\n        type: SORT_WEIGHT,\r\n        payload: order\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}