{"ast":null,"code":"import { ASCENDENTE, DESCENDENTE, W_ASCENDENTE, W_DESCENDENTE } from \"../../const/sort\";\nimport { FETCH_DOGS, SEARCH_DOGS, SORT } from \"../actions\";\nconst initialState = {\n  dogs: [],\n  filteredDogs: []\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_DOGS:\n      return { ...state,\n        filteredDogs: action.payload.data\n      };\n\n    case SEARCH_DOGS:\n      return { ...state,\n        filteredDogs: action.payload.data\n      };\n\n    case SORT:\n      let orderedDogs = [...state.filteredDogs];\n      orderedDogs.sort((a, b) => {\n        function avgWeight(num1, num2) {\n          return (num1 + num2) / 2;\n        }\n\n        if (a.weightMin && a.weightMax && b.weightMax && b.weightMin) {\n          if (action.payload === W_DESCENDENTE) {\n            console.log(avgWeight(a.weightMin, a.weightMax));\n            console.log(avgWeight(b.weightMin, b.weightMax));\n            let comparison = avgWeight(a.weightMin, a.weightMax) <= avgWeight(b.weightMin, b.weightMax);\n\n            if (comparison) {\n              return 1;\n            } else {\n              return -1;\n            }\n          } else if (action.payload === W_ASCENDENTE) {\n            let comparison = avgWeight(a.weightMin, a.weightMax) >= avgWeight(b.weightMin, b.weightMax);\n\n            if (comparison) {\n              return 1;\n            } else {\n              return -1;\n            }\n          } else if (a.weightMin && b.weightMin) {}\n        } else {\n          let comparison = a.name.toUpperCase().localeCompare(b.name.toUpperCase());\n          return action.payload === DESCENDENTE ? comparison : comparison * -1;\n        }\n      });\n      return { ...state,\n        filteredDogs: orderedDogs\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Salvador/Desktop/-/C/PI.DOGS/client/src/store/reducer/index.js"],"names":["ASCENDENTE","DESCENDENTE","W_ASCENDENTE","W_DESCENDENTE","FETCH_DOGS","SEARCH_DOGS","SORT","initialState","dogs","filteredDogs","reducer","state","action","type","payload","data","orderedDogs","sort","a","b","avgWeight","num1","num2","weightMin","weightMax","console","log","comparison","name","toUpperCase","localeCompare"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAmCC,YAAnC,EAAkDC,aAAlD,QAAuE,kBAAvE;AACA,SAASC,UAAT,EAAsBC,WAAtB,EAAmCC,IAAnC,QAA+C,YAA/C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,YAAY,EAAE;AAFG,CAArB;AAKA,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAC1D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,UAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFF,QAAAA,YAAY,EAAEG,MAAM,CAACE,OAAP,CAAeC;AAF3B,OAAN;;AAIJ,SAAKV,WAAL;AACI,aAAM,EACF,GAAGM,KADD;AAEFF,QAAAA,YAAY,EAAEG,MAAM,CAACE,OAAP,CAAeC;AAF3B,OAAN;;AAIJ,SAAKT,IAAL;AACI,UAAIU,WAAW,GAAG,CAAC,GAAGL,KAAK,CAACF,YAAV,CAAlB;AACAO,MAAAA,WAAW,CAACC,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAAQ;AACrB,iBAASC,SAAT,CAAoBC,IAApB,EAAyBC,IAAzB,EAA+B;AAC3B,iBAAQ,CAACD,IAAI,GAACC,IAAN,IAAY,CAApB;AACH;;AACD,YAAIJ,CAAC,CAACK,SAAF,IAAeL,CAAC,CAACM,SAAjB,IAA8BL,CAAC,CAACK,SAAhC,IAA6CL,CAAC,CAACI,SAAnD,EAA6D;AACzD,cAAIX,MAAM,CAACE,OAAP,KAAmBX,aAAvB,EAAsC;AAClCsB,YAAAA,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACF,CAAC,CAACK,SAAH,EAAaL,CAAC,CAACM,SAAf,CAArB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACD,CAAC,CAACI,SAAH,EAAaJ,CAAC,CAACK,SAAf,CAArB;AACA,gBAAIG,UAAU,GAAKP,SAAS,CAACF,CAAC,CAACK,SAAH,EAAaL,CAAC,CAACM,SAAf,CAAT,IAAsCJ,SAAS,CAACD,CAAC,CAACI,SAAH,EAAaJ,CAAC,CAACK,SAAf,CAAlE;;AACA,gBAAIG,UAAJ,EAAgB;AAAC,qBAAO,CAAP;AAAS,aAA1B,MACK;AAAC,qBAAO,CAAC,CAAR;AAAU;AACnB,WAND,MAMO,IAAKf,MAAM,CAACE,OAAP,KAAmBZ,YAAxB,EAAqC;AACxC,gBAAIyB,UAAU,GAAKP,SAAS,CAACF,CAAC,CAACK,SAAH,EAAaL,CAAC,CAACM,SAAf,CAAT,IAAsCJ,SAAS,CAACD,CAAC,CAACI,SAAH,EAAaJ,CAAC,CAACK,SAAf,CAAlE;;AACA,gBAAIG,UAAJ,EAAgB;AAAC,qBAAO,CAAP;AAAS,aAA1B,MACK;AAAC,qBAAO,CAAC,CAAR;AAAU;AACvB,WAJU,MAIJ,IAAKT,CAAC,CAACK,SAAF,IAAeJ,CAAC,CAACI,SAAtB,EAAgC,CAEtC;AACJ,SAdG,MAcG;AACH,cAAII,UAAU,GAAGT,CAAC,CAACU,IAAF,CAAOC,WAAP,GAAqBC,aAArB,CAAmCX,CAAC,CAACS,IAAF,CAAOC,WAAP,EAAnC,CAAjB;AACA,iBAAOjB,MAAM,CAACE,OAAP,KAAmBb,WAAnB,GAAiC0B,UAAjC,GAA8CA,UAAU,GAAG,CAAC,CAAnE;AACH;AACA,OAtBD;AAuBA,aAAM,EACF,GAAGhB,KADD;AAEFF,QAAAA,YAAY,EAAGO;AAFb,OAAN;;AAIJ;AAAS,aAAOL,KAAP;AAxCb;AA0CH","sourcesContent":["import { ASCENDENTE, DESCENDENTE , W_ASCENDENTE , W_DESCENDENTE } from \"../../const/sort\";\r\nimport { FETCH_DOGS , SEARCH_DOGS, SORT } from \"../actions\";\r\n\r\nconst initialState = {\r\n    dogs: [],\r\n    filteredDogs: [],\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_DOGS:\r\n            return{\r\n                ...state,\r\n                filteredDogs: action.payload.data\r\n            }\r\n        case SEARCH_DOGS:\r\n            return{\r\n                ...state,\r\n                filteredDogs: action.payload.data\r\n            }\r\n        case SORT:\r\n            let orderedDogs = [...state.filteredDogs];\r\n            orderedDogs.sort((a,b) =>{\r\n                function avgWeight (num1,num2) {\r\n                    return ((num1+num2)/2)\r\n                }\r\n                if (a.weightMin && a.weightMax && b.weightMax && b.weightMin){\r\n                    if (action.payload === W_DESCENDENTE) {\r\n                        console.log(avgWeight(a.weightMin,a.weightMax))\r\n                        console.log(avgWeight(b.weightMin,b.weightMax))\r\n                        let comparison = ( avgWeight(a.weightMin,a.weightMax) <= avgWeight(b.weightMin,b.weightMax) )\r\n                        if (comparison) {return 1}\r\n                        else {return -1}\r\n                    } else if ( action.payload === W_ASCENDENTE){\r\n                        let comparison = ( avgWeight(a.weightMin,a.weightMax) >= avgWeight(b.weightMin,b.weightMax) )\r\n                        if (comparison) {return 1}\r\n                        else {return -1}\r\n                } else if ( a.weightMin && b.weightMin){\r\n                    \r\n                }\r\n            } else {\r\n                let comparison = a.name.toUpperCase().localeCompare(b.name.toUpperCase());\r\n                return action.payload === DESCENDENTE ? comparison : comparison * -1\r\n            }\r\n            })\r\n            return{\r\n                ...state,\r\n                filteredDogs : orderedDogs\r\n            }\r\n        default: return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}